---
import "../styles/base.css";
import { Icon } from "astro-icon";
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} · Xila Luna</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap"
      rel="stylesheet"
    />
    <script is:inline>
      const primaryColorScheme = ""; // "light" | "dark"

      // Get theme data from local storage
      const currentTheme = localStorage.getItem("theme");

      function getPreferTheme() {
        // return theme value in local storage if it is set
        if (currentTheme) return currentTheme;

        // return primary color scheme if it is set
        if (primaryColorScheme) return primaryColorScheme;

        // return user device's prefer color scheme
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      }

      let themeValue = getPreferTheme();

      function setPreference() {
        localStorage.setItem("theme", themeValue);
        reflectPreference();
      }

      function reflectPreference() {
        document.firstElementChild.setAttribute("data-theme", themeValue);

        document
          .querySelector("#theme-btn")
          ?.setAttribute("aria-label", themeValue);
      }

      // set early so no page flashes / CSS is made aware
      reflectPreference();

      window.onload = () => {
        // set on load so screen readers can get the latest value on the button
        reflectPreference();

        // now this script can find and listen for clicks on the control
        document.querySelector("#theme-btn")?.addEventListener("click", () => {
          themeValue = themeValue === "light" ? "dark" : "light";
          setPreference();
        });
      };

      // sync with system changes
      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", ({ matches: isDark }) => {
          themeValue = isDark ? "dark" : "light";
          setPreference();
        });
    </script>
  </head>
  <body>
    <header class="sticky top-0 z-10 backdrop-blur-md">
      <nav
        class="mx-auto flex max-w-screen-sm items-center justify-between border-b border-skin-base px-4 py-5 sm:px-0"
      >
        <a href="/">
          <Icon name="ph:house" class="icon-style" />
        </a>
        <a href="/blog/">
          <Icon name="ph:newspaper" class="icon-style" />
        </a>
        <a href="/projects/">
          <Icon name="ph:rocket-launch" class="icon-style" />
        </a>
        <a href="/links/">
          <Icon name="ph:link" class="icon-style" />
        </a>
        <button id="theme-btn">
          <Icon name="ph:sun" class="icon-style" id="sun-svg" />
          <Icon name="ph:moon" class="icon-style" id="moon-svg" />
        </button>
      </nav>
    </header>
    <slot />
    <footer
      class="mx-auto flex max-w-screen-sm flex-col items-center border-t border-skin-base px-4 py-5 sm:flex-row sm:justify-between sm:px-0"
    >
      <p>
        {"Copyright © "}
        {new Date().getFullYear()}
        {" Xila Luna"}
      </p>
      <a
        href="https://github.com/xilaluna/xilaluna.com"
        class="hover:text-skin-accent hover:underline"
      >
        Source Code<Icon
          name="ph:star"
          class="mb-0.5 ml-2 inline-block h-5 w-5 align-middle"
        />
      </a>
    </footer>
  </body>
</html>
<style>
  .icon-style {
    @apply h-6 w-6 hover:text-skin-accent;
  }
</style>
